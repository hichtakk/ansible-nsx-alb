- hosts: localhost
  connection: local
  collections:
    - vmware.alb
  vars:
    avi_credentials:
      username: "admin"
      password: "VMware1!"
      controller: "172.31.10.40"
      api_version: "21.1.3"
    refs:
      cloud: "no-orchestrator"
      tenant: "admin"
      vrf: "global"
    vip_name: "vsvip-test01-no-orchestrator"
    vs_name: "vs-ansible-no-orchestrator"
    pool: "pool-test01"
    se_group: "seg01"
    health_monitor: "System-HTTP"
  tasks:
    - name: Example to create a Pool object
      avi_pool:
        avi_credentials: "{{ avi_credentials }}"
        name: "{{ pool }}"
        lb_algorithm: LB_ALGORITHM_ROUND_ROBIN
        cloud_ref: "/api/cloud/?name={{ refs.cloud }}"
        vrf_ref: "/api/vrfcontext/?name={{ refs.vrf }}"
        default_server_port: 8888
        health_monitor_refs:
        - "/api/healthmonitor?name={{ health_monitor }}"
        servers:
        - ip:
             addr: "172.31.10.240"
             type: 'V4'
    - name: Create vsvip for virtualservice for newtestvs
      avi_vsvip:
        name: "{{ vip_name }}"
        avi_credentials: "{{ avi_credentials }}"
        api_context: '{{avi_api_context | default(omit)}}'
        vrf_context_ref: "/api/vrfcontext/?name={{ refs.vrf }}"
        tenant_ref: "/api/tenant/?name={{ refs.tenant }}"
        cloud_ref: "/api/cloud/?name={{ refs.cloud }}"
        vip:
        - vip_id: '1'
          avi_allocated_fip: false
          auto_allocate_ip: false
          enabled: true
          auto_allocate_floating_ip: false
          avi_allocated_vip: false
          auto_allocate_ip_type: V4_ONLY
          ip_address:
            type: V4
            addr: 172.31.20.101
    - name: vip01
      avi_virtualservice:
        avi_credentials: "{{ avi_credentials }}"
        name: "{{ vs_name }}"
        vsvip_ref: "/api/vsvip/?name={{ vip_name }}"
        vrf_context_ref: "/api/vrfcontext/?name={{ refs.vrf }}"
        tenant_ref: "/api/tenant/?name={{ refs.tenant }}"
        cloud_ref: "/api/cloud/?name={{ refs.cloud }}"
        services:
        - port: 80
        - port: 443
          enable_ssl: true
        pool_ref: "/api/pool?name={{ pool }}"
        se_group_ref: "/api/serviceenginegroup/?name={{ se_group }}"
